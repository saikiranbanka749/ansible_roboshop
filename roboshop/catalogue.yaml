- name: catalogue
  hosts: localhost
  become: yes
  tasks:
  - name: disable old nodejs and enable nodeja
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y
  - name: Install NodeJS
    ansible.builtin.dnf:
     name: nodejs
     state: present
  - name: useradd
    ansible.builtin.user:
     name: roboshop
  - name: remove the path
    ansible.builtin.file:
     path: /app
     state: absent
  - name: create the 
    ansible.builtin.file:
      path: /app
      state: present
  - name: download the 
    ansible.builtin.get_url:
     url: curl -o /tmp/catalogue.zip https://roboshop-builds.s3.amazonaws.com/catalogue.zip
     dest: /tmp
  - name: unarchive 
    ansible.builtin.unarchive:
     src:  /tmp/catalogue.zip
     dest: /app
     remote_src: yes
  - name: Install dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app
  - name: copy the servicefile
    ansible.builtin.copy:
     src: catalogue.service
     dest: /etc/systemd/system/catalogue.service
  - name: deamon realod and start
    ansible.builtin.service:
     daemon_reload: true
  - name: copy mongodb.repo
    ansible.builtin.copy:
     src: mongodb.repo
     dest: /etc/yum.repos.d/mongodb.repo
  - name: Install mongodb client
    ansible.builtin.package:
     name: mongodb-org-shell
     state: present
  - name: get the categories count
    ansible.builtin.command:  mongo --host localhost --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
    register: product_count
  - name: load catalogue data
    ansible.builtin.command: mongo --host localhost < /app/schema/catalogue.js
    when: product_count.stdout == "0" # keep double quotes

  - name: start and enable catalogue
    ansible.builtin.service:
      name: catalogue
      state: restarted
      enabled: yes