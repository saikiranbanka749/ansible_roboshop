- name: user data
  hosts: localhost
  become: yes
  tasks:
  - name : disable and enable nodejs
    ansible.builtin.shell: 
     dnf module disable nodejs -y
     dnf module enable nodejs:18 -y
  - name: install nodejs
    ansible.builtin.packge:
      - name: nodejs
        state: present
  - name: useradd roboshop
    ansible.builtin.user:
     name: roboshop
  - name: remove directory
    ansible.builtin.file:
      path: /app
      state: absent
  - name: make directory
    ansible.builtin.file:
     path: /app
     state: directory
  - name: download the url
    ansible.builtin.get_url:
     url: https://roboshop-builds.s3.amazonaws.com/user.zip
     dest: /tmp
  - name: unarchive the zip file
    ansible.builtin.unarchive:
     src: /tmp/user.zip
     dest: /app
     remote_src: yes
  - name: npm install
    ansible.builtin.command: npm install
    args:
      chdir: /app
  - name: copy the user.service
    ansible.builtin.copy:
      src: user.service
      dest: /etc/systemd/system/user.service
  - name: daemon daemon_reload
    ansible.builtin.service:
      daemon_reload: true
  - name: copy mongodb.repo
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongo.repo
  - name: install mongo-org
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present
  - name: load user data
    ansible.builtin.command: mongo --host localhost < /app/schema/user.js
    when: user_count.stdout == "0"
  - name: start and enable user
    ansible.builtin.service:
     name: user
     state: restarted
     enabled: yes